{
	"name": "C Development Environment - GitHub Copilot Workshop",
	"build": {
		"dockerfile": "Dockerfile"
	},
	
	// Features to add to the dev container
	"features": {
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/github-cli:1": {}
	},

	// Configure tool-specific properties
	"customizations": {
		"vscode": {
			"settings": {
				"C_Cpp.default.cStandard": "c11",
				"C_Cpp.default.compilerPath": "/usr/bin/gcc",
				"C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
				"files.associations": {
					"*.h": "c",
					"*.c": "c"
				},
				"editor.formatOnSave": true,
				"editor.tabSize": 4,
				"editor.insertSpaces": true
			},
			
			// Extensions to install in the container
			"extensions": [
				"ms-vscode.cpptools",
				"ms-vscode.cpptools-extension-pack",
				"GitHub.copilot",
				"GitHub.copilot-chat",
				"ms-vscode.makefile-tools",
				"formulahendry.code-runner",
				"ms-vscode.hexeditor",
				"vadimcn.vscode-lldb"
			]
		}
	},

	// Post-create command to verify everything works
	"postCreateCommand": "gcc --version && make --version && echo 'Dev Container ready for C development!'",
	
	// Keep container running
	"overrideCommand": false,
	
	// Forward ports (in case we add a web interface later)
	"forwardPorts": [],
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally
	"portsAttributes": {},

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
	"remoteUser": "vscode",
	
	// Mount the workspace to preserve file permissions
	"mounts": [
		"source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
	],
	
	// Set the working directory
	"workspaceFolder": "/workspace"
}